import tkinter as tk
from tkinter import messagebox
import csv
import os
import matplotlib.pyplot as plt
from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg

# bagian skor csv =========================================================================================
def cek_file_csv():
    if not os.path.exists("skor.csv"):
        with open("skor.csv", mode="w", newline='') as f:
            writer = csv.writer(f)
            writer.writerow(["Nama", "Skor"])

def simpan_skor(nama, skor_baru):
    cek_file_csv()
    data = {}
    with open("skor.csv", mode="r") as f:
        reader = csv.DictReader(f)
        for row in reader:
            data[row["Nama"]] = int(row["Skor"])
    if nama in data:
        if skor_baru > data[nama]:
            data[nama] = skor_baru
    else:
        data[nama] = skor_baru
    with open("skor.csv", mode="w", newline='') as f:
        writer = csv.writer(f)
        writer.writerow(["Nama", "Skor"])
        for n, s in data.items():
            writer.writerow([n, s])

def reset_skor():
    with open("skor.csv", mode="w", newline='') as f:
        writer = csv.writer(f)
        writer.writerow(["Nama", "Skor"])
    messagebox.showinfo("Reset", "Semua skor telah direset.")

def tampilkan_skor_tertinggi():
    cek_file_csv()
    with open("skor.csv", mode="r") as f:
        reader = csv.DictReader(f)
        data = sorted(reader, key=lambda x: int(x["Skor"]), reverse=True)
    hasil = "Skor Tertinggi:\n"
    for i, row in enumerate(data[:5], 1):
        hasil += f"{i}. {row['Nama']} - {row['Skor']}\n"
    messagebox.showinfo("Top 5 Skor", hasil)

def tampilkan_chart():
    cek_file_csv()
    with open("skor.csv", mode="r") as f:
        reader = csv.DictReader(f)
        data = sorted(reader, key=lambda x: int(x["Skor"]), reverse=True)[:5]

    nama = [row['Nama'] for row in data]
    skor = [int(row['Skor']) for row in data]

    fig, ax = plt.subplots(figsize=(5,3))
    fig.patch.set_facecolor('#212121')
    ax.bar(nama, skor, color="#ffcc00")
    ax.set_title("Top 5 Skor", color="white")
    ax.set_facecolor("#333333")
    ax.tick_params(axis='x', colors='white')
    ax.tick_params(axis='y', colors='white')

    for i in ax.patches:
        ax.text(i.get_x() + i.get_width()/2., i.get_height()+1,
                '%d' % int(i.get_height()), ha='center', color='white', fontsize=9)

    chart_win = tk.Toplevel(root)
    chart_win.configure(bg="#212121")
    chart_win.title("Chart Skor")

    canvas = FigureCanvasTkAgg(fig, master=chart_win)
    canvas.draw()
    canvas.get_tk_widget().pack()
# Hover Button nya ==============================================================================

def create_hover_button(parent, text, command):
    b = tk.Button(parent, text=text, command=command, bg="#4fc3f7", fg="#212121",
                  activebackground="#0288d1", font=("Consolas", 12, "bold"), padx=10, pady=5, width=30)
    b.bind("<Enter>", on_enter)
    b.bind("<Leave>", on_leave)
    return b

def on_enter(e):
    e.widget['background'] = '#81d4fa'
    e.widget['foreground'] = '#333333'

def on_leave(e):
    e.widget['background'] = '#4fc3f7'
    e.widget['foreground'] = '#212121'

def switch_frame(frame):
    for f in [frame_welcome, frame_perkenalan, frame_project, frame_kuis]:
        f.pack_forget()
    frame.pack(fill='both', expand=True)

# =================================================================================
root = tk.Tk()
root.title("Project UAP - KUIS")
root.geometry("500x500")
root.configure(bg="#212121")

# Frame Wellcome nya ==================================================================================
frame_welcome = tk.Frame(root, bg="#212121")
tk.Label(frame_welcome, text="=+=++= SELAMAT DATANG =+=++=", font=("Consolas", 20, "bold"), fg="#4fc3f7", bg="#212121").pack(pady=(30, 40))
frame_tombol = tk.Frame(frame_welcome, bg="#212121")
frame_tombol.pack()
create_hover_button(frame_tombol, "KAMI", lambda: switch_frame(frame_perkenalan)).pack(pady=10)
create_hover_button(frame_tombol, "MENU", lambda: switch_frame(frame_project)).pack(pady=10)
create_hover_button(frame_tombol, "KUIS", lambda: minta_nama()).pack(pady=10)
create_hover_button(frame_tombol, "EXIT", root.quit).pack(pady=(25, 15))  # <- bottom

# F Kelompok ====================================================================================
frame_perkenalan = tk.Frame(root, bg="#3a2f0b")
tk.Label(frame_perkenalan, text="KELOMPOK", font=("Consolas", 18, "bold"), fg="#ffcc00", bg="#3a2f0b").pack(pady=(30, 20))

anggota = [
    {"nama": "Ruddy Haristianata", "npm": "2457051011"},
    {"nama": "Muhammad Rafi Al-Musthafa", "npm": "2457051009"},
    {"nama": "Wildan Humam Alpasya", "npm": "2417051064"},
    {"nama": "Fahmi Farizi", "npm": "2457051011"},
]

frame_nama = tk.Frame(frame_perkenalan, bg="#3a2f0b")
frame_nama.pack()
for i, m in enumerate(anggota, 1):
    tk.Label(frame_nama, text=f"{i}. Nama: {m['nama']} - NPM: {m['npm']}",
             fg="#ffcc00", bg="#3a2f0b", font=("Consolas", 12),
             anchor="center", justify="center").pack(pady=3)

tk.Label(frame_perkenalan, text="\n ILMU KOMPUTER \n\n", fg="#ffcc00", bg="#3a2f0b", font=("Consolas", 14, "bold")).pack(pady=10)
tk.Label(frame_perkenalan, text="Project ini adalah implementasi materi melalui KUIS.\n Untuk mencatat dan mengelola skor siswa berdasarkan teori SDA.", fg="#ffcc00", bg="#3a2f0b", font=("Consolas", 12), justify="center").pack(pady=10)
create_hover_button(frame_perkenalan, "Kembali ke Menu Awal", lambda: switch_frame(frame_welcome)).pack(pady=20)

# F. Project ================================================================================

frame_project = tk.Frame(root, bg="#212121")
tk.Label(frame_project, text="LIAT BAWAH YEE !!", font=("Consolas", 16, "bold"), fg="white", bg="#212121").pack(pady=(30, 20))
create_hover_button(frame_project, "Tampilkan Skor Tertinggi", tampilkan_skor_tertinggi).pack(pady=10)
create_hover_button(frame_project, "Tampilkan Chart", tampilkan_chart).pack(pady=10)
create_hover_button(frame_project, "Reset Skor", reset_skor).pack(pady=10)
create_hover_button(frame_project, "Kembali", lambda: switch_frame(frame_welcome)).pack(pady=(25, 35))

# F.KUIS ==
frame_kuis = tk.Frame(root, bg="#212121")

pertanyaan_kuis = [
    {"soal": "Tipe data manakah yang digunakan untuk menyimpan nilai desimal di C++?",
     "opsi": ["Int", "Char", "Bool", "Double"], "jawaban": "Double"}, #1

    {"soal": "Struktur kendali apakah yang digunakan untuk mengeksekusi perintah secara berulang selama kondisi bernilai benar??",
     "opsi": ["If", "While", "Switch", "goto"], "jawaban": "While"}, #2

    {"soal": "Bahasa yang dipelajari di semester satu dahulu ialah ...",
     "opsi": ["C++", "C", "Java", "Pascal"], "jawaban": "C++"}, #3

    {"soal": "Berapa keluaran dari kode berikut: cout << 2 + 3 * 4; ?",
     "opsi": ["10", "12", "13", "14"], "jawaban": "14"}, #4

    {"soal": "Apa tipe data dari variabel yang hanya bisa menyimpan nilai true atau false ?",
     "opsi": ["Int", "Bool", "Char", "Float"], "jawaban": "Bool"}, #5

    {"soal": "Operator manakah yang digunakan untuk mengakses anggota dari objek pointer?",
     "opsi": [".", "*", "->", "&"], "jawaban": "->"}, #6

    {"soal": "Dibawah ini yang tidak termaksud bahasa dalam Pemrogramman adalah...",
     "opsi": ["C++", "K3", "Java", "Pascal"], "jawaban": "K3"}, #7

    {"soal": "Library manakah yang harus di-include untuk menggunakan fungsi cout dalam C++ ?",
     "opsi": ["<math.h>", "<stdio.h>", "<iostream>", "<stdlib.h>"], "jawaban": "<iostream>"}, #8

    {"soal": "Operator yang digunakan untuk penjumlahan adalah ...",
     "opsi": ["+", "-", "*", "/"], "jawaban": "+"}, #9

    {"soal": "Nama Himpunan dari Mahasiswa Ilmu Komputer Adalah ...",
     "opsi": ["HIMATIK", "HIMATRO", "HIMAHELA", "HIMAKOM"], "jawaban": "HIMAKOM"}, # 10

    {"soal": "Siapa yang paling ganteng dibumi ...",
     "opsi": ["Kiting", "Kiting", "Kiting", "Kiting"], "jawaban": "Kiting"}, # Bonus
]

index_soal = 0
skor = 0
nama_pemain = ""

def minta_nama():
    global nama_pemain
    def simpan():
        nonlocal entry
        nama = entry.get().strip()
        if nama:
            global nama_pemain
            nama_pemain = nama
            top.destroy()
            mulai_kuis()
        else:
            messagebox.showwarning("Peringatan", "Nama tidak boleh kosong!")

    top = tk.Toplevel(root)
    top.title("Input dibawah : ")
    top.geometry("300x150")
    tk.Label(top, text="NAMA NYET :").pack(pady=10)
    entry = tk.Entry(top)
    entry.pack(pady=5)
    tk.Button(top, text="Mulai", command=simpan).pack(pady=10)

def mulai_kuis():
    global index_soal, skor
    index_soal = 0
    skor = 0
    switch_frame(frame_kuis)
    tampilkan_soal()
